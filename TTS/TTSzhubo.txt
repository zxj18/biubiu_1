[
    {
        "version": 3,
        "name": "讯飞",
        "pluginId": "peiyin.xunfei.cn",
        "author": "🙄",
        "code": "let PluginJS = {\n    'name': '讯飞',\n    'id': 'peiyin.xunfei.cn',\n    'author': '🙄',\n    'description': '讯飞智作',\n    'version': 3, // 插件版本号\n\n    'getAudio': function(text, locale, voice, speed, volume, pitch) {\n        let vid = voice.replace(/_\\d/, '')\n        let emo = voice.replace(/(\\d{5,6}|_)/g, '')\n        speed = speed * 4 - 200\n        volume = Math.floor(volume * 0.4 - 20)\n        pitch = pitch ? '[te' + pitch + ']' : ''\n        emo = emo ? '[em' + emo + ':0]' : ''\n        let txt = pitch + emo + text\n        let txtHash = ttsrv.md5Encode(txt) + ''\n        let txtCnt = encodeURI(txt)\n        let json = {\n            'synth_text_hash_code': txtHash\n        }\n\n        let aesKey = ttsrv.strToBytes('G%.g7\"Y&Nf^40Ee<')\n        let crypto = ttsrv.createSymmetricCrypto('AES/ECB/PKCS5Padding', aesKey)\n\n        function encrypt(json) {\n            let s = JSON.stringify(json)\n            let ret = crypto.encryptBase64(s)\n            return JSON.stringify({\n                req: ret\n            })\n        }\n\n        function decrypt(body) {\n            let j = JSON.parse(body)\n            j = crypto.decryptStr(j.body)\n            return JSON.parse(j)\n        }\n\n\n        let reqUrl = 'http://peiyin.xunfei.cn/web-server/1.0/works_synth_sign'\n        let reqBody = encrypt(json)\n        let reqHeaders = {\n            'content-type': 'application/json;charset=UTF-8'\n        }\n        let resp = ttsrv.httpPost(reqUrl, reqBody, reqHeaders)\n        let respData = resp.body().bytes()\n        let respStr = ttsrv.bytesToStr(respData)\n        let ret = decrypt(respStr)\n\n        let url = 'http://peiyin.xunfei.cn/synth?' +\n            'ts=' + ret.time_stamp +\n            '&sign=' + ret.sign_text +\n            '&sid=&vid=' + vid +\n            '&volume=' + volume +\n            '&speed=' + speed +\n            '&content=' + txtCnt + '&listen=0';\n\n        return ttsrv.httpGetBytes(url)\n    }\n\n}\n\n\n\n\nlet EditorJS = {\n    //在编辑TTS界面保存时调用\n    'getAudioSampleRate': function(locale, voice) {\n        let audio = PluginJS.getAudio('test', locale, voice, 50, 50, 50)\n        let rate = ttsrv.getAudioSampleRate(audio)\n        return rate\n    },\n\n    'onLoadData': function() {\n\n    },\n\n    'getLocales': function() {\n        return ['zh-CN', 'en-US']\n    },\n\n    'getVoices': function(locale) {\n        if (locale === 'zh-CN') {\n            return {\n                '130044': '聆小瑶 ',\n                '130052': '聆小瑶(二次元)',\n                '130059_5': '聆小瑶(高兴)',\n                '130060_6': '聆小瑶(抱歉)',\n                '130061_7': '聆小瑶(撒娇)',\n                '130062_9': '聆小瑶(严肃)',\n                '130050': '聆小璇',\n                '130051_7': '聆小璇(撒娇)',\n                '130049': '聆小璐',\n                '130047': '聆小琬',\n                '130048': '聆小璎',\n                '130053_5': '聆小璎(高兴)',\n                '130072_6': '聆小璎(抱歉)',\n                '130073_7': '聆小璎(撒娇)',\n                '130074_9': '聆小璎(严肃)',\n                '130110': '聆小珊',\n                '130056': '聆飞晨 ',\n                '130057': '聆飞哲 ',\n                '130097': '聆天明 ',\n                '130099': '聆关山 ',\n                '130100': '聆明泽 ',\n                '130055': '聆飞瀚 ',\n                '130098': '聆飞泓 ',\n                '130103': '聆飞远',\n                '130035': '阿森 ',\n                '130009': '小露 ',\n                '130013': '小娟 ',\n                '130102': '小果 ',\n                '130113': '诺诺',\n                '60020': '小燕',\n                '130002': '皓宇 ',\n                '130018': '嘉欣 ',\n                '65270': '野哥 ',\n                '130004': '希涵 ',\n                '130023': '顾辉 ',\n                '130019': '小媛(中&英) ',\n                '130039': '水哥 ',\n                '130033': '大圣 ',\n                '130040': '飞碟哥 ',\n                '130020': '超哥 ',\n                '130012': '一菲 ',\n                '130016': '管哥 ',\n                '130011': '小钟 ',\n                '20082': '小鹏 ',\n                '130008': '千雪 ',\n                '130021': '小英 ',\n                '130022': '一峰 ',\n                '130025': '小芳 ',\n                '130007': '七哥 ',\n                '130024': '小燕 ',\n                '20062': '小雅 ',\n                '20069': '小晚 ',\n                '130015': '豆豆 ',\n                '20067': '宣哥 ',\n                '65070': '小俊 ',\n                '70002': '宁宁 ',\n                '65010': '小洋 ',\n                '20055': '小师 ',\n                '60025': '小璇 ',\n                '20078': '天哥 ',\n                '20052': '刚哥 ',\n                '62060': '百合仙子 ',\n                '65250': '辉叔 ',\n                '60130': '楠楠 ',\n                '60150': '老马 ',\n                '62010': '小华 ',\n                '15675': '小宇 ',\n                '65360': '瑶瑶 ',\n                '60030': '小峰 ',\n                '60140': '玲姐姐 ',\n                '62070': '韦香主 ',\n                '65080': '程程 ',\n                '65340': '小南 ',\n                '60120': '小桃丸 ',\n                '60170': '萌小新 ',\n                '65110': '小光 ',\n                '65320': '小薛 ',\n                '65230': '宝哥 ',\n                '130037': '成都宝儿 ',\n                '130036': '苏州苏小曦 ',\n                '130034': '合肥子沁 ',\n                '130032': '上海阮灵 ',\n                '20077': '内蒙小包 ',\n                '20076': '合肥小肥 ',\n                '60027': '粤语小月 ',\n                '20075': '湖北小王 ',\n                '20074': '山东小东 ',\n                '68040': '东北晓倩 ',\n                '68010': '湖南小强 ',\n                '68030': '河南小坤 ',\n                '68060': '四川小蓉 ',\n                '68080': '陕西小莹 ',\n                '68120': '台湾玉儿 ',\n                '10003': '广东小梅 '\n            }\n        } else {\n            return {\n                '69030': 'Steve(英文) ',\n                '20066': 'Lindsay(英文) ',\n                '69010': 'John(英文) ',\n                '69020': 'Catherine(英文)'\n            }\n        }\n    },\n\n    'onLoadUI': function(ctx, linearLayout) {\n\n    }\n\n}"
    },
    {
        "version": 2,
        "name": "有道",
        "pluginId": "ai.youdao.com",
        "author": "🙄",
        "code": "let PluginJS = {\n    'name': '有道',\n    'id': 'ai.youdao.com',\n    'author': '🙄',\n    'description': '有道智云',\n    'version': 2, // 插件版本号\n\n    'getAudio': function(text, locale, voice, speed, volume, pitch) {\n        speed = speed * 0.02 || 1\n        volume = Math.floor(volume * 0.045 + 0.5) || 2\n        let txtCnt = encodeURI(text)\n        let reqUrl = 'https://aidemo.youdao.com/ttsapi'\n        let reqHeaders = {\n            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n        }\n        let reqBody = 'text=' + txtCnt + '&speed=' + speed + '&voice=' + voice\n        let resp = ttsrv.httpPost(reqUrl, reqBody, reqHeaders)\n        let respData = resp.body().bytes()\n        let respStr = ttsrv.bytesToStr(respData)\n        let j = JSON.parse(respStr)\n        let url = j.data + '&volume=' + volume\n        return ttsrv.httpGetBytes(url)\n    }\n\n}\n\nlet EditorJS = {\n    //在编辑TTS界面保存时调用\n    'getAudioSampleRate': function(locale, voice) {\n        let audio = PluginJS.getAudio('test', locale, voice, 50, 50, 50)\n        let rate = ttsrv.getAudioSampleRate(audio)\n        return rate\n    },\n\n    'onLoadData': function() {\n\n    },\n\n    'getLocales': function() {\n        return ['zh-CN', 'en-US']\n    },\n\n    'getVoices': function(locale) {\n        if (locale === 'zh-CN') {\n            return {\n                '0&lan=zhiqi': '有小芙 ',\n                '4&lan=zh-CHS': '有小薰',\n                '6&lan=zh-CHS': '有小沁',\n                '1&lan=zhiqi': '有小浩',\n                '3&lan=zh-CHS': '有小智'\n            }\n        } else {\n            return {\n                '2&lan=en-USA': '有小美',\n                '2&lan=en-GBR': '有小英',\n                '2&lan=ja': '有可酱',\n                '2&lan=ko': '朴智幼',\n                '0&lan=pt': '安娜'\n            }\n        }\n    },\n\n    'onLoadUI': function(ctx, linearLayout) {\n\n    }\n\n}"
    },
    {
        "version": 1,
        "name": "灵伴",
        "pluginId": "www.lbaicc.cn",
        "author": "🙄",
        "code": "let PluginJS = {\n    'name': '灵伴',\n    'id': 'www.lbaicc.cn',\n    'author': '🙄',\n    'description': '灵伴智能',\n    'version': 1, // 插件版本号\n\n    'getAudio': function(text, locale, voice, speed, volume, pitch) {\n        let reqUrl = 'https://paas.lingban.cn/tts/v1/audition'\n        let reqHeaders = {\n            'content-type': 'application/json;charset=UTF-8'\n        }\n        let reqBody = {\n            'text': text,\n            'speaker': voice,\n            'volume': volume,\n            'speed': speed,\n            'pitch': pitch\n        }\n        reqBody = JSON.stringify(reqBody)\n        let resp = ttsrv.httpPost(reqUrl, reqBody, reqHeaders)\n        let respData = resp.body().bytes()\n        return respData\n    }\n\n}\n\nlet EditorJS = {\n    //在编辑TTS界面保存时调用\n    'getAudioSampleRate': function(locale, voice) {\n        let audio = PluginJS.getAudio('test', locale, voice, 50, 50, 50)\n        let rate = ttsrv.getAudioSampleRate(audio)\n\n        return rate\n    },\n\n    'onLoadData': function() {\n\n    },\n\n    'getLocales': function() {\n        return ['zh-CN', 'en-US']\n    },\n\n    'getVoices': function(locale) {\n        if (locale === 'zh-CN') {\n            return {'yanyan':'妍妍 [亲切甜美女声]','lulu':'璐璐 [轻快热情女声]','qiqi':'麒麒 [清新爽快女声]','nana':'娜娜 [轻柔恬淡女声]','xiaocheng':'晓诚 [似水如歌女声]','xiaoyao':'逍遥 [甜美灵动女声]','chenyu':'晨雨 [温和有礼女声]','lingfeng':'灵凤 [温婉动人女声]','ruirui':'瑞叡 [沉稳恬淡女声]','luyao':'露瑶 [婉转悠扬女声]','linglong':'玲珑 [轻快甜美女声]','yurou':'羽柔 [轻盈欢快女声]','siqi':'思绮 [宛转悠扬女声]','chenchen':'晨晨 [热情洋溢女声]','qiulian':'秋莲 [春风舒畅女声]','xintong':'馨彤 [清澈动听女声]','yiyi':'伊依 [清朗悦耳女声]','wenhui':'文慧 [珠圆玉润女声]','xiaoxiao':'筱筱 [可信亲切女声]','xiaofang':'小芳 [天真活泼女声]','xiaoai':'小艾 [真诚友善女声]','nainai':'奈奈 [纯真自然女声]','chengmiao':'承渺 [轻劲飒爽女声]','zhengcheng':'征程 [柔和坚定男声]','zili':'子黎 [清幽雅致男声]','ningning':'宁宁 [亲切温柔男声]','zhentian':'振天 [大方洒脱男声]','bufan':'步凡 [磁性淳厚男声]','wenxi':'文熙 [阳光自然男声]','tiantian':'天天 [沉稳浑厚男声]','lingyu':'凌宇 [温润如玉男声]','wusong':'梧松 [明朗严肃男声]','kunde':'坤德 [深沉稳重男声]','jinyan':'锦言 [清晰严谨男声]','shenzhi':'深秩 [紧张压迫男声]','ruyan':'儒严 [一本正经男声]','jianming':'剑鸣 [玄幻小说]','yuzhang':'御彰 [玄幻小说]','chuanqi':'传奇 [游戏小说]','lingmeng':'绫梦 [言情小说]','shenghun':'圣魂 [玄幻小说]','yizhou':'易周 [都市小说]','youlan':'幽蓝 [言情小说]','hongmang':'鸿芒 [玄幻小说]','youran':'悠然 [玄幻小说]','shanyu':'山雨 [玄幻小说]','mengjing':'梦静 [都市小说]','yunsong':'云颂 [玄幻小说]','haohan':'浩翰 [都市小说]','linger':'灵儿 [萝莉音色]','yaoyao':'妖妖 [正太音色]','subo':'苏博 [新闻男声]','mina':'米娜 [新闻女声]','linghui':'灵慧 [新闻女声]','lingyin':'灵隐 [新闻女声]','shuangshuang':'双双 [新闻男声]','jeff':'杰夫 [英文新闻]','rose':'萝丝 [英文小说]','julia':'茱莉亚 [英文小说]','jack':'杰克 [英文小说]','liangshu':'梁叔 [名人音色]','xiaosong':'小松 [名人音色]','laoyi':'老易 [名人音色]','dafei':'大飞 [名人音色]','shishen':'食神 [名人音色]','wansheng':'万圣 [名人音色]','kaige':'凯哥 [名人音色]','guobao':'国宝 [名人音色]','jiange':'健哥 [名人音色]'}\n        }\n    },\n\n    'onLoadUI': function(ctx, linearLayout) {\n\n    }\n\n}"
    },
    {
        "version": 1,
        "name": "微软翻译",
        "pluginId": "com.microsoft.translator",
        "author": "🙄",
        "code": "let format = \"audio-24khz-48kbitrate-mono-mp3\"\n\nlet PluginJS = {\n    \"name\": \"微软翻译\",\n    \"id\": \"com.microsoft.translator\", //插件的唯一ID 建议以此种方式命名\n    \"author\": \"🙄\",\n    \"description\": \"微软翻译\",\n    \"version\": 1, // 插件版本号\n\n    // 获取音频\n    // text: 文本，locale：地区代码，voice：声音key，rate：语速，volume：音量，pitch：音高。(后三者范围都在100内, 当随系统时在200内)\n    \"getAudio\": function(text, locale, voice, rate, volume, pitch){\n           rate = rate - 50\n           pitch = pitch - 50\n           \n            let ssml = '<speak xmlns=\"http://www.w3.org/2001/10/synthesis\" xmlns:mstts=\"http://www.w3.org/2001/mstts\" xmlns:emo=\"http://www.w3.org/2009/10/emotionml\" version=\"1.0\" xml:lang=\"zh-CN\">'\r\n            + '    <voice name=\"'+ voice+ '\">'\r\n            + '<mstts:express-as style=\"general\" styledegree=\"1.0\" role=\"default\">'\r\n            + '<prosody rate=\"'+ rate +'%\" pitch=\"'+ pitch + '%\" volume=\"'+ volume +'\">'+ text +'</prosody >'\r\n            + '</mstts:express-as></voice ></speak >'\n            logger.w(ssml)\n            \r\n           return getAudioInternal(ssml, format)\n    },\n}\n\n\nlet ep = \"\"\nfunction getAudioInternal(ssml, format){\n    if (ep === \"\") {\n         ep= getEndpoint()\n    }\n    \n    url = \"https://\" + ep['r'] + \".tts.speech.microsoft.com/cognitiveservices/v1\"\n    let headers = {\n         'Authorization':   ep['t'],\n         \"Content-Type\": \"application/ssml+xml\",\n         \"X-Microsoft-OutputFormat\": format,\n    }    \n    let resp = ttsrv.httpPost(url, ssml, headers)\n    if (resp.code() != 200){\n        throw \"音频获取失败: HTTP-\" + resp.code()\n     }   \n     \n     return resp.body().bytes()\n}\n\nlet endpointUrl = \"https://dev.microsofttranslator.com/apps/endpoint?api-version=1.0\"\n\nfunction getEndpoint(){\n    let sign = getSign()\n\n    let headers = {\n        \"Accept-Language\":  \"zh-Hans\",\n        \"X-ClientVersion\": \"4.0.530a 5fe1dc6c\",\n        \"X-UserId\": \"0f04d16a175c411e\",\n        \"X-HomeGeographicRegion\": \"zh-Hans-CN\",\n        \"X-ClientTraceId\": \"aab069b9-70a7-4844-a734-96cd78d94be9\",\n        \"X-MT-Signature\": sign,\n        \"User-Agent\": \"okhttp/4.5.0\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Content-Length\": \"0\",\n        \"Accept-Encoding\": \"gzip\"\n    }    \n    \n   let resp =  ttsrv.httpPost(endpointUrl, \"\", headers)\n   if (resp.code() != 200){\n       throw \"终结点信息获取失败: HTTP-\" + resp.code()\n    }\n   let str = resp.body().string()\n   return JSON.parse(str)\n}    \n\nfunction getSign(){\r\n    let aly = new JavaImporter(\n        javax.crypto.Mac, \n        javax.crypto.spec.SecretKeySpec, \n        java.net.URLEncoder,\n        java.lang.String, \n        java.text.SimpleDateFormat, \n        java.util.Locale,\n        java.util.TimeZone,\n        android.util.Base64\n        );\r\n    with (aly) {\r\n        function percentEncode(value) {\r\n            return URLEncoder.encode(value,'UTF-8')\r\n        }\n    \n        function dateFormat (){\n             let simpleDateFormat = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss\", Locale.US);\r\n            simpleDateFormat.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\r\n            return simpleDateFormat.format(new Date()).toLowerCase() + \"GMT\";\n    }\r\n\r\n    function sign(url) {\n        url = url.split('://')[1]\n        \n        let encodeUrl = percentEncode(url)\n        let uuid = ttsrv.randomUUID().replaceAll(\"-\", \"\")\n        let formattedDate = dateFormat()\n        let  bytes = String.format(\"%s%s%s%s\", \"MSTranslatorAndroidApp\", encodeUrl, formattedDate, uuid).toLowerCase().getBytes('UTF-8');\n        \n        let secretKeySpec = new SecretKeySpec(Base64.decode(\"oik6PdDdMnOXemTbwvMn9de/h9lFnfBaCWbGMMZqqoSaQaqUOqjVGm5NqsmjcBI1x+sS9ugjB55HEJWRiFXYFw==\", 2), \"HmacSHA256\");\r\n        var mac = Mac.getInstance('HmacSHA256');\r\n        mac.init(secretKeySpec)\r\n        var signData = mac.doFinal(bytes);\r\n        var signBase64 = Base64.encodeToString(signData, Base64.NO_WRAP);\r\n        return String.format(\"%s::%s::%s::%s\", \"MSTranslatorAndroidApp\", signBase64, formattedDate, uuid);\r\n        }\n\r\n    }\n    \n    return sign(endpointUrl)\n }\n\n\r\n// 全部voice数据\r\nvar voices = {}\r\n// 当前语言下的voice\r\nvar currentVoices ={}\r\n\r\nlet EditorJS = {\r\n    //音频的采样率 编辑TTS界面保存时调用\r\n    \"getAudioSampleRate\": function(locale, voice) {\r\n        // 根据voice判断返回的采样率\r\n        // 也可以动态获取：\r\n        let audio = PluginJS.getAudio('test测试', locale, voice, 50, 50, 1)\r\n        return ttsrv.getAudioSampleRate(audio)\r\n    },\r\n\r\n    \"getLocales\": function() {\r\n        let locales = new  Array()\r\n        \r\n        voices.forEach(function(v){\r\n            let loc = v[\"Locale\"]\r\n            if (!locales.includes(loc)){\r\n                locales.push(loc)\r\n            }\r\n        }) \r\n        \r\n        return locales\r\n    },\r\n\r\n    // 当语言变更时调用\r\n    \"getVoices\": function(locale){\r\n        currentVoices = []\r\n        voices.forEach(function(v){\r\n            if (v['Locale'] === locale){\r\n                currentVoices.push(v)\r\n            }    \r\n        }) \r\n        \r\n        let mm = {}\r\n         currentVoices.map(function(v){\r\n              mm[v['ShortName']]= v['LocalName']\r\n           })\r\n        return mm\r\n    },\r\n    \r\n    // 加载本地或网络数据，运行在IO线程。\r\n    \"onLoadData\": function(){\r\n        // 获取数据并缓存以便复用\r\n        var jsonStr = ''\r\n        if (ttsrv.fileExist('voices.json')){\r\n            jsonStr = ttsrv.readTxtFile('voices.json')\r\n        }else{\r\n            let url  = \"https://eastus.api.speech.microsoft.com/cognitiveservices/voices/list\"\r\n            let header = {\r\n                \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 Edg/107.0.1418.26\",\r\n                \"X-Ms-Useragent\":\"SpeechStudio/2021.05.001\",\r\n            \t\"Content-Type\": \"application/json\",\r\n            \t\"Origin\": \"https://azure.microsoft.com\",\r\n            \t\"Referer\":\"https://azure.microsoft.com\"\r\n               }\r\n             jsonStr = ttsrv.httpGetString(url, header)\r\n            ttsrv.writeTxtFile('voices.json', jsonStr)\r\n        }\r\n       \r\n       voices = JSON.parse(jsonStr)\r\n       // 每一个TTS配置的附加数据\r\n//       ttsrv.extraData = 'qwqwqwqwqwq'\r\n    },\r\n    \r\n    \"onLoadUI\": function(ctx, linerLayout) {\r\n\r\n    }\r\n    \r\n}"
    },
    {
        "version": 1,
        "name": "呱呱",
        "pluginId": "www.gstudios.com",
        "author": "🙄",
        "code": "let PluginJS = {\n    'name': '呱呱',\n    'id': 'www.gstudios.com',\n    'author': '🙄',\n    'description': '呱呱有声',\n    'version': 1, // 插件版本号\n\n    'getAudio': function(text, locale, voice, speed, volume, pitch) {\n        let reqUrl = 'https://www.gstudios.com.cn/story_v2/api/record/tts/trail'\n\t\tlet reqBody = {\"cvRobotId\":voice,\"ssml\": text }\n\t\tlet reqHeaders ={\n\t\t\t\t'Authorization':'Bearer 2462b59c349347c0be51f4559d85815b',\n\t\t\t\t'Content-Type': 'application/json;charset=UTF-8'\n\t\t\t}\n        reqBody = JSON.stringify(reqBody)\n        let resp = ttsrv.httpPost(reqUrl, reqBody, reqHeaders)\n        let respData = resp.body().bytes()\n        return respData\n    }\n\n}\n\nlet EditorJS = {\n    //在编辑TTS界面保存时调用\n    'getAudioSampleRate': function(locale, voice) {\n        let audio = PluginJS.getAudio('test', locale, voice, 50, 50, 50)\n        let rate = ttsrv.getAudioSampleRate(audio)\n\n        return rate\n    },\n\n    'onLoadData': function() {\n\n    },\n\n    'getLocales': function() {\n        return ['zh-CN', 'en-US']\n    },\n\n    'getVoices': function(locale) {\n        if (locale === 'zh-CN') {\n            return {'53':'芷嫣 [现言|古言]','14':'清妍 [现言|古言]','4':'百合 [现言|古言]','5':'碧玉 [玄幻|历史]','52':'柒月 [现言|古言]','54':'玄凤 [玄幻|武侠]','11':'梦悬 [悬疑]','12':'喵爷 [社科]','19':'小美 [玄幻]','20':'小魔仙 [玄幻]','55':'闻雪 [新闻]','56':'闻冰 [新闻]','57':'闻雨 [新闻]','22':'米娜 [新闻]','16':'天掘 [都市|悬疑|玄幻]','46':'天武 [武侠|都市|玄幻]','47':'天火 [玄幻|历史|悬疑]','61':'天启 [科幻|历史]','48':'天灵 [历史|社科]','49':'天龙 [悬疑|都市]','6':'沧海 [都市|玄幻]','7':'苍佶 [都市|玄幻]','9':'花男 [都市|玄幻]','15':'深渊 [悬疑|都市]','58':'闻铭 [新闻]','59':'闻宏 [新闻]','60':'闻祥 [新闻]','23':'苏博 [新闻]','39':'灵儿 [儿童]','40':'妖妖 [儿童]'}\n        }\n    },\n\n    'onLoadUI': function(ctx, linearLayout) {\n\n    }\n\n}"
    }
]